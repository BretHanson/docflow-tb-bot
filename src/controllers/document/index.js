import {Markup, Scenes} from "telegraf";
import { logger, prisma } from "../../index.js";
import Fuse from "fuse.js";

import { sleep } from "../../util/common.js";
import { updateUserLastTimestamp } from "../../middlewares/updateUserLastTimestamps.js";
import {getMainKeyboard, getDocumentKeyboard, getBackKeyboard} from '../../util/keyboard.js'

const Base = Scenes.BaseScene;
const document = new Base("document");
const { leave } = Scenes.Stage;

const {
    backKeyboard,
    backKeyboardBack
      } = getBackKeyboard();

/*const optionSearch = {
    includeScore: true,
    keys: ['name']
};*/

/*const documents = await prisma.documents.findMany();*/

/*const fuse = new Fuse(documents, optionSearch);*/

document.enter(async (ctx) => {
    logger.info(`User ${ctx.message.from.id} enter document scene`);
    await updateUserLastTimestamp(ctx);
    await ctx.replyWithHTML(`üëÄ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ —è –ø–æ–ø—Ä–æ–±—É—é –µ–≥–æ –Ω–∞–π—Ç–∏ \n Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª–µ–µ 3-—Ö —Å–∏–º–≤–æ–ª–æ–≤`, backKeyboard);
});

document.leave(async (ctx) => {
    logger.info(`User ${ctx.message.from.id} leave document scene`);
    const { mainKeyboard } = getMainKeyboard();
    await ctx.reply('‚úã –ù—É –ø—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', mainKeyboard);
});

document.command('repair', leave());
document.hears(backKeyboardBack, leave());

document.on("message", async (ctx) => {
    logger.info(`Search document name: ${ctx.message.text}`);
    if (ctx.message.text === backKeyboardBack) { leave() };
    if(ctx.message.text.length < 3){
        await ctx.telegram.sendMessage(ctx.message.chat.id,
            `–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª–µ–µ 3 üóø`);
    }else {
        const searchResult = fuse.search(String(ctx.message.text));
        if (searchResult.length > 0) {
            await ctx.telegram.sendMessage(ctx.message.chat.id, 'üß∑ –í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π', Markup.inlineKeyboard(
                searchResult.map((item) => {
                    return [Markup.button.callback(item.item.name, item.item.id)]
                })
        ))
        } else {
            await ctx.telegram.sendMessage(ctx.message.chat.id, 'üßê –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É');
            logger.info(`Document ${ctx.message.text} not found`);
        }
    }
});

document.command('repair', leave());
document.hears(backKeyboardBack, leave());
export default document;
